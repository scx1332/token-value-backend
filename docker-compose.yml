services:
  token_backend_worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MONITOR_DB_ENGINE=${MONITOR_DB_ENGINE}
      - POLYGON_PROVIDER_URL=${POLYGON_PROVIDER_URL}
      - FILL_BLOCKS_AT_ONCE=${FILL_BLOCKS_AT_ONCE}
    command: python bg_work.py
    restart: unless-stopped
  token_backend_app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MONITOR_DB_ENGINE=${MONITOR_DB_ENGINE}
      - POLYGON_PROVIDER_URL=${POLYGON_PROVIDER_URL}
    command: sleep 10 && python app.py
    restart: unless-stopped
    ports:
      - "${TOKEN_VALUE_BACKEND_PORT}:5000"    
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "${PGADMIN_PORT}:80"
    links:
      - postgres
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS=500
      - SCRIPT_NAME=${PGADMIN_BASE_URL}
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    
      